// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryLayer;

namespace RepositoryLayer.Migrations
{
    [DbContext(typeof(Store_DbContext))]
    [Migration("20210113022818_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ModelLayer.Customer", b =>
                {
                    b.Property<Guid>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DefaultLocationlocationGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.HasIndex("DefaultLocationlocationGuid");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("ModelLayer.Inventory", b =>
                {
                    b.Property<Guid>("inventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("inventoryLocationlocationGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("inventoryProductproductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("inventoryQuantity")
                        .HasColumnType("int");

                    b.HasKey("inventoryId");

                    b.HasIndex("inventoryLocationlocationGuid");

                    b.HasIndex("inventoryProductproductId");

                    b.ToTable("inventories");
                });

            modelBuilder.Entity("ModelLayer.Location", b =>
                {
                    b.Property<Guid>("locationGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("locationGuid");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("ModelLayer.Order", b =>
                {
                    b.Property<DateTime>("timeCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("orderCustomeruserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("orderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("orderLocationlocationGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("orderProductproductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("orderQuantity")
                        .HasColumnType("int");

                    b.HasKey("timeCreated");

                    b.HasIndex("orderCustomeruserId");

                    b.HasIndex("orderLocationlocationGuid");

                    b.HasIndex("orderProductproductId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("ModelLayer.Product", b =>
                {
                    b.Property<Guid>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("productId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("ModelLayer.Customer", b =>
                {
                    b.HasOne("ModelLayer.Location", "DefaultLocation")
                        .WithMany()
                        .HasForeignKey("DefaultLocationlocationGuid");

                    b.Navigation("DefaultLocation");
                });

            modelBuilder.Entity("ModelLayer.Inventory", b =>
                {
                    b.HasOne("ModelLayer.Location", "inventoryLocation")
                        .WithMany()
                        .HasForeignKey("inventoryLocationlocationGuid");

                    b.HasOne("ModelLayer.Product", "inventoryProduct")
                        .WithMany()
                        .HasForeignKey("inventoryProductproductId");

                    b.Navigation("inventoryLocation");

                    b.Navigation("inventoryProduct");
                });

            modelBuilder.Entity("ModelLayer.Order", b =>
                {
                    b.HasOne("ModelLayer.Customer", "orderCustomer")
                        .WithMany()
                        .HasForeignKey("orderCustomeruserId");

                    b.HasOne("ModelLayer.Location", "orderLocation")
                        .WithMany()
                        .HasForeignKey("orderLocationlocationGuid");

                    b.HasOne("ModelLayer.Product", "orderProduct")
                        .WithMany()
                        .HasForeignKey("orderProductproductId");

                    b.Navigation("orderCustomer");

                    b.Navigation("orderLocation");

                    b.Navigation("orderProduct");
                });
#pragma warning restore 612, 618
        }
    }
}
